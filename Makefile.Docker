PROJECT_NAME = pdftotext-plus-plus

SRC_DIR = src
MAIN_BINARY_FILE = src/PdfToTextPlusPlusMain
TEST_BINARY_FILES = $(basename $(wildcard $(SRC_DIR)/*Test.cpp $(SRC_DIR)/*/*Test.cpp))
HEADER_FILES = $(wildcard $(SRC_DIR)/*.h $(SRC_DIR)/*/*.h)
OBJECT_FILES = $(addsuffix .o, $(basename $(filter-out %Main.cpp %Test.cpp, $(wildcard $(SRC_DIR)/*.cpp $(SRC_DIR)/*/*.cpp))))

#CXX = g++ -g -Wall -std=c++17
CXX = g++ -O3 -Wall -std=c++17
LIBS = -lpoppler -lpoppler-cpp -ltensorflow_cc -ltensorflow_framework -lutf8proc
LIBS_TEST = $(LIBS) -lgtest -lgtest_main -lpthread

.PRECIOUS: %.o

all: compile test checkstyle

# compile: $(MAIN_BINARY_FILE) $(TEST_BINARY_FILES)
compile: $(MAIN_BINARY_FILE)

test: $(TEST_BINARY_FILES)
	for T in $(TEST_BINARY_FILES); do ./$$T; done

checkstyle:
	@# Filter HEADER_FILES_guards and include check, doesn't work well for
	@# projects roots that are not a svn or git root.
	@# Allow non-const references.
	python3 $(CPPLINT_PATH) --repository=. --filter='$(CPPLINT_FILTERS)' *.h *.cpp

clean:
	rm -f **/*.o
	rm -f $(MAIN_BINARY_FILE)
	rm -f $(TEST_BINARY_FILES)
	rm -f core

%Main: %Main.o $(OBJECT_FILES)
	$(CXX) -o $@ $^ $(LIBS)

%Test: %Test.o $(OBJECT_FILES)
	$(CXX) -o $@ $^ $(LIBS_TEST)

%.o: %.cpp $(HEADER_FILES)
	$(CXX) -c $< -o $@ $(LIBS)

install: compile
	cp $(MAIN_BINARY_FILE) /usr/local/bin/pdftotext++